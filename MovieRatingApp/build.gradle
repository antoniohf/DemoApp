
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE')
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
	}

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'kotlin'

// This is used as the docker image prefix (org)
group = 'antoniohf'

bootJar {
	baseName = 'movierating-docker'
	archiveVersion =  '0.0.1'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

// tag::task[]
task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}
// end::task[]

repositories {
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("io.jsonwebtoken:jjwt:0.9.1") // specific version because it was audited and deemed safe/compliant ?
	compile('org.jetbrains.kotlin:kotlin-reflect')
	runtimeOnly 'com.h2database:h2'
	testCompile("org.springframework.boot:spring-boot-starter-test")
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
}
